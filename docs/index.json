{
  "api/Nimiq.Config.html": {
    "href": "api/Nimiq.Config.html",
    "title": "Class Config",
    "keywords": "Class Config Used in initialization of NimiqClient class. Inheritance System.Object Config Namespace : Nimiq Assembly : NimiqClient.dll Syntax public class Config : object Constructors | Improve this Doc View Source Config(String, String, String, String, Int64) Initializes the configuration object from arbitrary parameters. Declaration public Config(string scheme = \"http\", string user = \"\", string password = \"\", string host = \"127.0.0.1\", long port = null) Parameters Type Name Description System.String scheme Protocol squeme, \"http\" or \"https\" . System.String user Authorized user. System.String password Password for the authorized user. System.String host Host IP address. System.Int64 port Host port. Properties | Improve this Doc View Source Host Host IP address. Declaration public string Host { get; set; } Property Value Type Description System.String | Improve this Doc View Source Password Password for the authorized user. Declaration public string Password { get; set; } Property Value Type Description System.String | Improve this Doc View Source Port Host port. Declaration public long Port { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Scheme Protocol squeme, \"http\" or \"https\" . Declaration public string Scheme { get; set; } Property Value Type Description System.String | Improve this Doc View Source User Authorized user. Declaration public string User { get; set; } Property Value Type Description System.String"
  },
  "api/Nimiq.html": {
    "href": "api/Nimiq.html",
    "title": "Namespace Nimiq",
    "keywords": "Namespace Nimiq Classes Config Used in initialization of NimiqClient class. InternalErrorException Internal error during a JSON RPC request. JsonElementExtensions Class Extensions. JsonStringValue Attribute to assign the string value of fields in StringEnumeration. NimiqClient Nimiq JSONRPC Client. RemoteErrorException Exception on the remote server. StringEnumeration Abstract base class used in string enumerations. StringEnumerationConverter JsonConverter used in string enumeration serialization."
  },
  "api/Nimiq.InternalErrorException.html": {
    "href": "api/Nimiq.InternalErrorException.html",
    "title": "Class InternalErrorException",
    "keywords": "Class InternalErrorException Internal error during a JSON RPC request. Inheritance System.Object InternalErrorException Namespace : Nimiq Assembly : NimiqClient.dll Syntax public class InternalErrorException : Exception Constructors | Improve this Doc View Source InternalErrorException(String) Initializes internal exception from a string. Declaration public InternalErrorException(string message) Parameters Type Name Description System.String message Meessage for the error."
  },
  "api/Nimiq.JsonElementExtensions.html": {
    "href": "api/Nimiq.JsonElementExtensions.html",
    "title": "Class JsonElementExtensions",
    "keywords": "Class JsonElementExtensions Class Extensions. Inheritance System.Object JsonElementExtensions Namespace : Nimiq Assembly : NimiqClient.dll Syntax public static class JsonElementExtensions : object Methods | Improve this Doc View Source GetObject(JsonElement) Convert a JsonElement into its underlying objects. Declaration public static object GetObject(this JsonElement jsonElement) Parameters Type Name Description JsonElement jsonElement Returns Type Description System.Object | Improve this Doc View Source GetObject<T>(JsonElement) Convert a JsonElement into its underlying object of a given type. Declaration public static T GetObject<T>(this JsonElement jsonElement) Parameters Type Name Description JsonElement jsonElement Returns Type Description T Type Parameters Name Description T"
  },
  "api/Nimiq.JsonStringValue.html": {
    "href": "api/Nimiq.JsonStringValue.html",
    "title": "Class JsonStringValue",
    "keywords": "Class JsonStringValue Attribute to assign the string value of fields in StringEnumeration. Inheritance System.Object JsonStringValue Namespace : Nimiq Assembly : NimiqClient.dll Syntax public class JsonStringValue : Attribute Constructors | Improve this Doc View Source JsonStringValue(String) Initializes the Attribute instance to a given value. Declaration public JsonStringValue(string value) Parameters Type Name Description System.String value Fields | Improve this Doc View Source Value String value. Declaration public string Value Field Value Type Description System.String"
  },
  "api/Nimiq.Models.Account.html": {
    "href": "api/Nimiq.Models.Account.html",
    "title": "Class Account",
    "keywords": "Class Account Normal Nimiq account object returned by the server. Inheritance System.Object Account HTLC VestingContract Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public class Account : object Properties | Improve this Doc View Source Address User friendly address (NQ-address). Declaration public string Address { get; set; } Property Value Type Description System.String | Improve this Doc View Source Balance Balance of the account (in smallest unit). Declaration public long Balance { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Id Hex-encoded 20 byte address. Declaration public string Id { get; set; } Property Value Type Description System.String | Improve this Doc View Source Type The account type associated with the account. Declaration public AccountType Type { get; set; } Property Value Type Description AccountType"
  },
  "api/Nimiq.Models.AccountType.html": {
    "href": "api/Nimiq.Models.AccountType.html",
    "title": "Enum AccountType",
    "keywords": "Enum AccountType Type of a Nimiq account. Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public enum AccountType : long Fields Name Description basic Normal Nimiq account. htlc Hashed Timelock Contract. vesting Vesting contract."
  },
  "api/Nimiq.Models.Block.html": {
    "href": "api/Nimiq.Models.Block.html",
    "title": "Class Block",
    "keywords": "Class Block Block returned by the server. Inheritance System.Object Block Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public class Block : object Properties | Improve this Doc View Source AccountsHash Hex-encoded 32-byte hash of the accounts tree root. Declaration public string AccountsHash { get; set; } Property Value Type Description System.String | Improve this Doc View Source BodyHash Hex-encoded 32-byte hash of the block body Merkle root. Declaration public string BodyHash { get; set; } Property Value Type Description System.String | Improve this Doc View Source Confirmations Number of confirmations for this transaction (number of blocks on top of the block where this transaction was in). Declaration public long Confirmations { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Difficulty Block difficulty, encoded as decimal number in string. Declaration public string Difficulty { get; set; } Property Value Type Description System.String | Improve this Doc View Source ExtraData Hex-encoded value of the extra data field, maximum of 255 bytes. Declaration public string ExtraData { get; set; } Property Value Type Description System.String | Improve this Doc View Source Hash Hex-encoded 32-byte hash of the block. Declaration public string Hash { get; set; } Property Value Type Description System.String | Improve this Doc View Source Miner Hex-encoded 20 byte address of the miner of the block. Declaration public string Miner { get; set; } Property Value Type Description System.String | Improve this Doc View Source MinerAddress User friendly address (NQ-address) of the miner of the block. Declaration public string MinerAddress { get; set; } Property Value Type Description System.String | Improve this Doc View Source Nonce The nonce of the block used to fulfill the Proof-of-Work. Declaration public long Nonce { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Number Height of the block. Declaration public long Number { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source ParentHash Hex-encoded 32-byte hash of the predecessor block. Declaration public string ParentHash { get; set; } Property Value Type Description System.String | Improve this Doc View Source Pow Hex-encoded 32-byte Proof-of-Work hash of the block. Declaration public string Pow { get; set; } Property Value Type Description System.String | Improve this Doc View Source Size Block size in byte. Declaration public long Size { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Timestamp UNIX timestamp of the block. Declaration public long Timestamp { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Transactions Array of transactions. Either represented by the transaction hash or a Transaction object. Declaration public object[] Transactions { get; set; } Property Value Type Description System.Object []"
  },
  "api/Nimiq.Models.BlockTemplate.html": {
    "href": "api/Nimiq.Models.BlockTemplate.html",
    "title": "Class BlockTemplate",
    "keywords": "Class BlockTemplate Block template returned by the server. Inheritance System.Object BlockTemplate Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public class BlockTemplate : object Properties | Improve this Doc View Source Body Block template body returned by the server. Declaration public BlockTemplateBody Body { get; set; } Property Value Type Description BlockTemplateBody | Improve this Doc View Source Header Block template header returned by the server. Declaration public BlockTemplateHeader Header { get; set; } Property Value Type Description BlockTemplateHeader | Improve this Doc View Source Interlink Hex-encoded interlink. Declaration public string Interlink { get; set; } Property Value Type Description System.String | Improve this Doc View Source Target Compact form of the hash target to submit a block to this client. Declaration public long Target { get; set; } Property Value Type Description System.Int64"
  },
  "api/Nimiq.Models.BlockTemplateBody.html": {
    "href": "api/Nimiq.Models.BlockTemplateBody.html",
    "title": "Class BlockTemplateBody",
    "keywords": "Class BlockTemplateBody Block template body returned by the server. Inheritance System.Object BlockTemplateBody Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public class BlockTemplateBody : object Properties | Improve this Doc View Source ExtraData Hex-encoded value of the extra data field. Declaration public string ExtraData { get; set; } Property Value Type Description System.String | Improve this Doc View Source Hash 32-byte hex-encoded hash of the block body. Declaration public string Hash { get; set; } Property Value Type Description System.String | Improve this Doc View Source MerkleHashes Array of hex-encoded hashes that verify the path of the miner address in the merkle tree. This can be used to change the miner address easily. Declaration public string[] MerkleHashes { get; set; } Property Value Type Description System.String [] | Improve this Doc View Source MinerAddr 20-byte hex-encoded miner address. Declaration public string MinerAddr { get; set; } Property Value Type Description System.String | Improve this Doc View Source PrunedAccounts Array of hex-encoded pruned accounts for this block. Declaration public string[] PrunedAccounts { get; set; } Property Value Type Description System.String [] | Improve this Doc View Source Transactions Array of hex-encoded transactions for this block. Declaration public string[] Transactions { get; set; } Property Value Type Description System.String []"
  },
  "api/Nimiq.Models.BlockTemplateHeader.html": {
    "href": "api/Nimiq.Models.BlockTemplateHeader.html",
    "title": "Class BlockTemplateHeader",
    "keywords": "Class BlockTemplateHeader Block template header returned by the server. Inheritance System.Object BlockTemplateHeader Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public class BlockTemplateHeader : object Properties | Improve this Doc View Source AccountsHash 32-byte hex-encoded hash of the accounts tree. Declaration public string AccountsHash { get; set; } Property Value Type Description System.String | Improve this Doc View Source Height Height of the block in the block chain (also known as block number). Declaration public long Height { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source InterlinkHash 32-byte hex-encoded hash of the interlink. Declaration public string InterlinkHash { get; set; } Property Value Type Description System.String | Improve this Doc View Source NBits Compact form of the hash target for this block. Declaration public long NBits { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source PrevHash 32-byte hex-encoded hash of the previous block. Declaration public string PrevHash { get; set; } Property Value Type Description System.String | Improve this Doc View Source Version Version in block header. Declaration public long Version { get; set; } Property Value Type Description System.Int64"
  },
  "api/Nimiq.Models.ConsensusState.html": {
    "href": "api/Nimiq.Models.ConsensusState.html",
    "title": "Class ConsensusState",
    "keywords": "Class ConsensusState Consensus state returned by the server. Inheritance System.Object StringEnumeration ConsensusState Inherited Members StringEnumeration.Value StringEnumeration.ToString() StringEnumeration.Equals(Object) StringEnumeration.GetHashCode() Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public class ConsensusState : StringEnumeration Fields | Improve this Doc View Source Connecting Connecting. Declaration public static ConsensusState Connecting Field Value Type Description ConsensusState | Improve this Doc View Source Established Consensus established. Declaration public static ConsensusState Established Field Value Type Description ConsensusState | Improve this Doc View Source Syncing Syncing blocks. Declaration public static ConsensusState Syncing Field Value Type Description ConsensusState"
  },
  "api/Nimiq.Models.HTLC.html": {
    "href": "api/Nimiq.Models.HTLC.html",
    "title": "Class HTLC",
    "keywords": "Class HTLC Hashed Timelock Contract object returned by the server. Inheritance System.Object Account HTLC Inherited Members Account.Id Account.Address Account.Balance Account.Type Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public class HTLC : Account Properties | Improve this Doc View Source HashAlgorithm Hash algorithm. Declaration public long HashAlgorithm { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source HashCount Number of hashes this HTLC is split into. Declaration public long HashCount { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source HashRoot Hex-encoded 32 byte hash root. Declaration public string HashRoot { get; set; } Property Value Type Description System.String | Improve this Doc View Source Recipient Hex-encoded 20 byte address of the recipient of the HTLC. Declaration public string Recipient { get; set; } Property Value Type Description System.String | Improve this Doc View Source RecipientAddress User friendly address (NQ-address) of the recipient of the HTLC. Declaration public string RecipientAddress { get; set; } Property Value Type Description System.String | Improve this Doc View Source Sender Hex-encoded 20 byte address of the sender of the HTLC. Declaration public string Sender { get; set; } Property Value Type Description System.String | Improve this Doc View Source SenderAddress User friendly address (NQ-address) of the sender of the HTLC. Declaration public string SenderAddress { get; set; } Property Value Type Description System.String | Improve this Doc View Source Timeout Block after which the contract can only be used by the original sender to recover funds. Declaration public long Timeout { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source TotalAmount The total amount (in smallest unit) that was provided at the contract creation. Declaration public long TotalAmount { get; set; } Property Value Type Description System.Int64"
  },
  "api/Nimiq.Models.html": {
    "href": "api/Nimiq.Models.html",
    "title": "Namespace Nimiq.Models",
    "keywords": "Namespace Nimiq.Models Classes Account Normal Nimiq account object returned by the server. Block Block returned by the server. BlockTemplate Block template returned by the server. BlockTemplateBody Block template body returned by the server. BlockTemplateHeader Block template header returned by the server. ConsensusState Consensus state returned by the server. HTLC Hashed Timelock Contract object returned by the server. LogLevel Used to set the log level in the JSONRPC server. MempoolInfo Mempool information returned by the server. OutgoingTransaction Used to pass the data to send transaccions. Peer Peer information returned by the server. PeerStateCommand Commands to change the state of a peer. SyncStatus Syncing status returned by the server. Transaction Transaction returned by the server. TransactionReceipt Transaction receipt returned by the server. VestingContract Vesting contract object returned by the server. Wallet Nimiq wallet returned by the server. WorkInstructions Work instructions receipt returned by the server. Enums AccountType Type of a Nimiq account. PeerAddressState Peer address state returned by the server. PeerConnectionState Peer connection state returned by the server. PoolConnectionState Pool connection state information returned by the server."
  },
  "api/Nimiq.Models.LogLevel.html": {
    "href": "api/Nimiq.Models.LogLevel.html",
    "title": "Class LogLevel",
    "keywords": "Class LogLevel Used to set the log level in the JSONRPC server. Inheritance System.Object StringEnumeration LogLevel Inherited Members StringEnumeration.Value StringEnumeration.ToString() StringEnumeration.Equals(Object) StringEnumeration.GetHashCode() Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public class LogLevel : StringEnumeration Fields | Improve this Doc View Source Assert Assertions level log. Declaration public static LogLevel Assert Field Value Type Description LogLevel | Improve this Doc View Source Debug Debugging level log. Declaration public static LogLevel Debug Field Value Type Description LogLevel | Improve this Doc View Source Error Error level log. Declaration public static LogLevel Error Field Value Type Description LogLevel | Improve this Doc View Source Info Info level log. Declaration public static LogLevel Info Field Value Type Description LogLevel | Improve this Doc View Source Trace Trace level log. Declaration public static LogLevel Trace Field Value Type Description LogLevel | Improve this Doc View Source Verbose Verbose level log. Declaration public static LogLevel Verbose Field Value Type Description LogLevel | Improve this Doc View Source Warn Warning level log. Declaration public static LogLevel Warn Field Value Type Description LogLevel"
  },
  "api/Nimiq.Models.MempoolInfo.html": {
    "href": "api/Nimiq.Models.MempoolInfo.html",
    "title": "Class MempoolInfo",
    "keywords": "Class MempoolInfo Mempool information returned by the server. Inheritance System.Object MempoolInfo Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public class MempoolInfo : object Properties | Improve this Doc View Source Buckets Array containing a subset of fee per byte buckets from [10000, 5000, 2000, 1000, 500, 200, 100, 50, 20, 10, 5, 2, 1, 0] that currently have more than one transaction. Declaration public long[] Buckets { get; set; } Property Value Type Description System.Int64 [] | Improve this Doc View Source Total Total number of pending transactions in mempool. Declaration public long Total { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source TransactionsPerBucket Number of transaction in the bucket. A transaction is assigned to the highest bucket of a value lower than its fee per byte value. Declaration public Dictionary<long, long> TransactionsPerBucket { get; set; } Property Value Type Description Dictionary < System.Int64 , System.Int64 >"
  },
  "api/Nimiq.Models.OutgoingTransaction.html": {
    "href": "api/Nimiq.Models.OutgoingTransaction.html",
    "title": "Class OutgoingTransaction",
    "keywords": "Class OutgoingTransaction Used to pass the data to send transaccions. Inheritance System.Object OutgoingTransaction Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public class OutgoingTransaction : object Properties | Improve this Doc View Source Data Hex-encoded contract parameters or a message. Declaration public string Data { get; set; } Property Value Type Description System.String | Improve this Doc View Source Fee Integer of the fee (in smallest unit) for this transaction. Declaration public long Fee { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source From The address the transaction is send from. Declaration public string From { get; set; } Property Value Type Description System.String | Improve this Doc View Source FromType The account type at the given address. Declaration public AccountType FromType { get; set; } Property Value Type Description AccountType | Improve this Doc View Source To The address the transaction is directed to. Declaration public string To { get; set; } Property Value Type Description System.String | Improve this Doc View Source ToType The account type at the given address. Declaration public AccountType ToType { get; set; } Property Value Type Description AccountType | Improve this Doc View Source Value Integer of the value (in smallest unit) sent with this transaction. Declaration public long Value { get; set; } Property Value Type Description System.Int64"
  },
  "api/Nimiq.Models.Peer.html": {
    "href": "api/Nimiq.Models.Peer.html",
    "title": "Class Peer",
    "keywords": "Class Peer Peer information returned by the server. Inheritance System.Object Peer Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public class Peer : object Properties | Improve this Doc View Source Address Peer address. Declaration public string Address { get; set; } Property Value Type Description System.String | Improve this Doc View Source AddressState Peer address state. Declaration public PeerAddressState AddressState { get; set; } Property Value Type Description PeerAddressState | Improve this Doc View Source ConnectionState Peer connection state. Declaration public PeerConnectionState? ConnectionState { get; set; } Property Value Type Description System.Nullable < PeerConnectionState > | Improve this Doc View Source HeadHash Hash of the head block of the peer. Declaration public string HeadHash { get; set; } Property Value Type Description System.String | Improve this Doc View Source Id Peer id. Declaration public string Id { get; set; } Property Value Type Description System.String | Improve this Doc View Source Latency Latency to the peer. Declaration public int? Latency { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Rx Received bytes. Declaration public int? Rx { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source TimeOffset Time offset with the peer (in miliseconds). Declaration public int? TimeOffset { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Tx Sent bytes. Declaration public int? Tx { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Version Node version the peer is running. Declaration public int? Version { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/Nimiq.Models.PeerAddressState.html": {
    "href": "api/Nimiq.Models.PeerAddressState.html",
    "title": "Enum PeerAddressState",
    "keywords": "Enum PeerAddressState Peer address state returned by the server. Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public enum PeerAddressState : int Fields Name Description banned Balled peer. established Established peer. failed Peer failed. new New peer. tried Already tried peer."
  },
  "api/Nimiq.Models.PeerConnectionState.html": {
    "href": "api/Nimiq.Models.PeerConnectionState.html",
    "title": "Enum PeerConnectionState",
    "keywords": "Enum PeerConnectionState Peer connection state returned by the server. Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public enum PeerConnectionState : int Fields Name Description closed Connection closed. connected Connected. connecting Connecting. established Connection established. negotiating Negotiating connection. new New connection."
  },
  "api/Nimiq.Models.PeerStateCommand.html": {
    "href": "api/Nimiq.Models.PeerStateCommand.html",
    "title": "Class PeerStateCommand",
    "keywords": "Class PeerStateCommand Commands to change the state of a peer. Inheritance System.Object StringEnumeration PeerStateCommand Inherited Members StringEnumeration.Value StringEnumeration.ToString() StringEnumeration.Equals(Object) StringEnumeration.GetHashCode() Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public class PeerStateCommand : StringEnumeration Fields | Improve this Doc View Source Ban Ban. Declaration public static PeerStateCommand Ban Field Value Type Description PeerStateCommand | Improve this Doc View Source Connect Connect. Declaration public static PeerStateCommand Connect Field Value Type Description PeerStateCommand | Improve this Doc View Source Disconnect Disconnect. Declaration public static PeerStateCommand Disconnect Field Value Type Description PeerStateCommand | Improve this Doc View Source Unban Unban. Declaration public static PeerStateCommand Unban Field Value Type Description PeerStateCommand"
  },
  "api/Nimiq.Models.PoolConnectionState.html": {
    "href": "api/Nimiq.Models.PoolConnectionState.html",
    "title": "Enum PoolConnectionState",
    "keywords": "Enum PoolConnectionState Pool connection state information returned by the server. Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public enum PoolConnectionState : int Fields Name Description closed Closed. connected Connected. connecting Connecting."
  },
  "api/Nimiq.Models.SyncStatus.html": {
    "href": "api/Nimiq.Models.SyncStatus.html",
    "title": "Class SyncStatus",
    "keywords": "Class SyncStatus Syncing status returned by the server. Inheritance System.Object SyncStatus Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public class SyncStatus : object Properties | Improve this Doc View Source CurrentBlock The current block, same as blockNumber. Declaration public long CurrentBlock { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source HighestBlock The estimated highest block. Declaration public long HighestBlock { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source StartingBlock The block at which the import started (will only be reset, after the sync reached his head). Declaration public long StartingBlock { get; set; } Property Value Type Description System.Int64"
  },
  "api/Nimiq.Models.Transaction.html": {
    "href": "api/Nimiq.Models.Transaction.html",
    "title": "Class Transaction",
    "keywords": "Class Transaction Transaction returned by the server. Inheritance System.Object Transaction Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public class Transaction : object Properties | Improve this Doc View Source BlockHash Hex-encoded hash of the block containing the transaction. Declaration public string BlockHash { get; set; } Property Value Type Description System.String | Improve this Doc View Source BlockNumber Height of the block containing the transaction. Declaration public long BlockNumber { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Confirmations Number of confirmations of the block containing the transaction. Declaration public long Confirmations { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Data Hex-encoded contract parameters or a message. Declaration public string Data { get; set; } Property Value Type Description System.String | Improve this Doc View Source Fee Integer of the fee (in smallest unit) for this transaction. Declaration public long Fee { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Flags Bit-encoded transaction flags. Declaration public long Flags { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source From Hex-encoded address of the sending account. Declaration public string From { get; set; } Property Value Type Description System.String | Improve this Doc View Source FromAddress Nimiq user friendly address (NQ-address) of the sending account. Declaration public string FromAddress { get; set; } Property Value Type Description System.String | Improve this Doc View Source Hash Hex-encoded hash of the transaction. Declaration public string Hash { get; set; } Property Value Type Description System.String | Improve this Doc View Source Timestamp UNIX timestamp of the block containing the transaction. Declaration public long Timestamp { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source To Hex-encoded address of the recipient account. Declaration public string To { get; set; } Property Value Type Description System.String | Improve this Doc View Source ToAddress Nimiq user friendly address (NQ-address) of the recipient account. Declaration public string ToAddress { get; set; } Property Value Type Description System.String | Improve this Doc View Source TransactionIndex Index of the transaction in the block. Declaration public long TransactionIndex { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Value Integer of the value (in smallest unit) sent with this transaction. Declaration public long Value { get; set; } Property Value Type Description System.Int64"
  },
  "api/Nimiq.Models.TransactionReceipt.html": {
    "href": "api/Nimiq.Models.TransactionReceipt.html",
    "title": "Class TransactionReceipt",
    "keywords": "Class TransactionReceipt Transaction receipt returned by the server. Inheritance System.Object TransactionReceipt Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public class TransactionReceipt : object Properties | Improve this Doc View Source BlockHash Hex-encoded hash of the block where this transaction was in. Declaration public string BlockHash { get; set; } Property Value Type Description System.String | Improve this Doc View Source BlockNumber Block number where this transaction was in. Declaration public long BlockNumber { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Confirmations Number of confirmations for this transaction (number of blocks on top of the block where this transaction was in). Declaration public long Confirmations { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Timestamp Timestamp of the block where this transaction was in. Declaration public long Timestamp { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source TransactionHash Hex-encoded hash of the transaction. Declaration public string TransactionHash { get; set; } Property Value Type Description System.String | Improve this Doc View Source TransactionIndex Integer of the transactions index position in the block. Declaration public long TransactionIndex { get; set; } Property Value Type Description System.Int64"
  },
  "api/Nimiq.Models.VestingContract.html": {
    "href": "api/Nimiq.Models.VestingContract.html",
    "title": "Class VestingContract",
    "keywords": "Class VestingContract Vesting contract object returned by the server. Inheritance System.Object Account VestingContract Inherited Members Account.Id Account.Address Account.Balance Account.Type Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public class VestingContract : Account Properties | Improve this Doc View Source Owner Hex-encoded 20 byte address of the owner of the vesting contract. Declaration public string Owner { get; set; } Property Value Type Description System.String | Improve this Doc View Source OwnerAddress User friendly address (NQ-address) of the owner of the vesting contract. Declaration public string OwnerAddress { get; set; } Property Value Type Description System.String | Improve this Doc View Source VestingStart The block that the vesting contracted commenced. Declaration public long VestingStart { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source VestingStepAmount The amount (in smallest unit) released every vestingStepBlocks blocks. Declaration public long VestingStepAmount { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source VestingStepBlocks The number of blocks after which some part of the vested funds is released. Declaration public long VestingStepBlocks { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source VestingTotalAmount The total amount (in smallest unit) that was provided at the contract creation. Declaration public long VestingTotalAmount { get; set; } Property Value Type Description System.Int64"
  },
  "api/Nimiq.Models.Wallet.html": {
    "href": "api/Nimiq.Models.Wallet.html",
    "title": "Class Wallet",
    "keywords": "Class Wallet Nimiq wallet returned by the server. Inheritance System.Object Wallet Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public class Wallet : object Properties | Improve this Doc View Source Address User friendly address (NQ-address). Declaration public string Address { get; set; } Property Value Type Description System.String | Improve this Doc View Source Id Hex-encoded 20 byte address. Declaration public string Id { get; set; } Property Value Type Description System.String | Improve this Doc View Source PrivateKey Hex-encoded 32 byte Ed25519 private key. Declaration public string PrivateKey { get; set; } Property Value Type Description System.String | Improve this Doc View Source PublicKey Hex-encoded 32 byte Ed25519 public key. Declaration public string PublicKey { get; set; } Property Value Type Description System.String"
  },
  "api/Nimiq.Models.WorkInstructions.html": {
    "href": "api/Nimiq.Models.WorkInstructions.html",
    "title": "Class WorkInstructions",
    "keywords": "Class WorkInstructions Work instructions receipt returned by the server. Inheritance System.Object WorkInstructions Namespace : Nimiq.Models Assembly : NimiqClient.dll Syntax public class WorkInstructions : object Properties | Improve this Doc View Source Algorithm Field to describe the algorithm used to mine the block. Always nimiq-argon2 for now. Declaration public string Algorithm { get; set; } Property Value Type Description System.String | Improve this Doc View Source Data Hex-encoded block header. This is what should be passed through the hash function. The last 4 bytes describe the nonce, the 4 bytes before are the current timestamp. Most implementations allow the miner to arbitrarily choose the nonce and to update the timestamp without requesting new work instructions. Declaration public string Data { get; set; } Property Value Type Description System.String | Improve this Doc View Source Suffix Hex-encoded block without the header. When passing a mining result to submitBlock, append the suffix to the data string with selected nonce. Declaration public string Suffix { get; set; } Property Value Type Description System.String | Improve this Doc View Source Target Compact form of the hash target to submit a block to this client. Declaration public long Target { get; set; } Property Value Type Description System.Int64"
  },
  "api/Nimiq.NimiqClient.html": {
    "href": "api/Nimiq.NimiqClient.html",
    "title": "Class NimiqClient",
    "keywords": "Class NimiqClient Nimiq JSONRPC Client. Inheritance System.Object NimiqClient Namespace : Nimiq Assembly : NimiqClient.dll Syntax public class NimiqClient : object Constructors | Improve this Doc View Source NimiqClient(Config) Client initialization from a Config structure. When no parameter is given, it uses de default configuration in the server ( http://:@127.0.0.1:8648 ). Declaration public NimiqClient(Config config) Parameters Type Name Description Config config Options used for the configuration. | Improve this Doc View Source NimiqClient(String, String, String, String, Int64) Initialization. Declaration public NimiqClient(string scheme = \"http\", string user = \"\", string password = \"\", string host = \"127.0.0.1\", long port = null) Parameters Type Name Description System.String scheme Protocol squeme, \"http\" or \"https\" . System.String user Authorized user. System.String password Password for the authorized user. System.String host Host IP address. System.Int64 port Host port. Properties | Improve this Doc View Source Id Number in the sequence for the next request. Declaration public long Id { get; set; } Property Value Type Description System.Int64 Methods | Improve this Doc View Source Accounts() Returns a list of addresses owned by client. Declaration public Account[] Accounts() Returns Type Description Account [] Array of Accounts owned by the client. | Improve this Doc View Source BlockNumber() Returns the height of most recent block. Declaration public long BlockNumber() Returns Type Description System.Int64 The current block height the client is on. | Improve this Doc View Source Consensus() Returns information on the current consensus state. Declaration public ConsensusState Consensus() Returns Type Description ConsensusState Consensus state. \"established\" is the value for a good state, other values indicate bad. | Improve this Doc View Source Constant(String) Returns or a constant value. Declaration public long Constant(string constant) Parameters Type Name Description System.String constant The class and name of the constant (format should be \"Class.CONSTANT\" ). Returns Type Description System.Int64 The value of the constant. | Improve this Doc View Source CreateAccount() Creates a new account and stores its private key in the client store. Declaration public Wallet CreateAccount() Returns Type Description Wallet Information on the wallet that was created using the command. | Improve this Doc View Source CreateRawTransaction(OutgoingTransaction) Creates and signs a transaction without sending it. The transaction can then be send via sendRawTransaction() without accidentally replaying it. Declaration public string CreateRawTransaction(OutgoingTransaction transaction) Parameters Type Name Description OutgoingTransaction transaction The transaction object. Returns Type Description System.String Hex-encoded transaction. | Improve this Doc View Source GetAccount(String) Returns details for the account of given address. Declaration public Account GetAccount(string address) Parameters Type Name Description System.String address Address to get account details. Returns Type Description Account Details about the account. Returns the default empty basic account for non-existing accounts. | Improve this Doc View Source GetBalance(String) Returns the balance of the account of given address. Declaration public long GetBalance(string address) Parameters Type Name Description System.String address Address to check for balance. Returns Type Description System.Int64 The current balance at the specified address (in smalest unit). | Improve this Doc View Source GetBlockByHash(String, Nullable<Boolean>) Returns information about a block by hash. Declaration public Block GetBlockByHash(string hash, bool? includeTransactions = null) Parameters Type Name Description System.String hash Hash of the block to gather information on. System.Nullable < System.Boolean > includeTransactions If true it returns the full transaction objects, if false only the hashes of the transactions. Returns Type Description Block A block object or null when no block was found. | Improve this Doc View Source GetBlockByNumber(Int32, Nullable<Boolean>) Returns information about a block by block number. Declaration public Block GetBlockByNumber(int height, bool? includeTransactions = null) Parameters Type Name Description System.Int32 height The height of the block to gather information on. System.Nullable < System.Boolean > includeTransactions If true it returns the full transaction objects, if false only the hashes of the transactions. Returns Type Description Block A block object or null when no block was found. | Improve this Doc View Source GetBlockTemplate(String, String) Returns a template to build the next block for mining. This will consider pool instructions when connected to a pool. If address and extraData are provided the values are overriden. Declaration public BlockTemplate GetBlockTemplate(string address = null, string extraData = \"\") Parameters Type Name Description System.String address The address to use as a miner for this block. This overrides the address provided during startup or from the pool. System.String extraData Hex-encoded value for the extra data field. This overrides the extra data provided during startup or from the pool. Returns Type Description BlockTemplate A block template object. | Improve this Doc View Source GetBlockTransactionCountByHash(String) Returns the number of transactions in a block from a block matching the given block hash. Declaration public long? GetBlockTransactionCountByHash(string hash) Parameters Type Name Description System.String hash Hash of the block. Returns Type Description System.Nullable < System.Int64 > Number of transactions in the block found, or null , when no block was found. | Improve this Doc View Source GetBlockTransactionCountByNumber(Int64) Returns the number of transactions in a block matching the given block number. Declaration public long? GetBlockTransactionCountByNumber(long height) Parameters Type Name Description System.Int64 height Height of the block. Returns Type Description System.Nullable < System.Int64 > Number of transactions in the block found, or null , when no block was found. | Improve this Doc View Source GetRawTransactionInfo(String) Deserializes hex-encoded transaction and returns a transaction object. Declaration public Transaction GetRawTransactionInfo(string transaction) Parameters Type Name Description System.String transaction The hex encoded signed transaction. Returns Type Description Transaction The transaction object. | Improve this Doc View Source GetTransactionByBlockHashAndIndex(String, Int64) Returns information about a transaction by block hash and transaction index position. Declaration public Transaction GetTransactionByBlockHashAndIndex(string hash, long index) Parameters Type Name Description System.String hash Hash of the block containing the transaction. System.Int64 index Index of the transaction in the block. Returns Type Description Transaction A transaction object or null when no transaction was found. | Improve this Doc View Source GetTransactionByBlockNumberAndIndex(Int64, Int64) Returns information about a transaction by block number and transaction index position. Declaration public Transaction GetTransactionByBlockNumberAndIndex(long height, long index) Parameters Type Name Description System.Int64 height Height of the block containing the transaction. System.Int64 index Index of the transaction in the block. Returns Type Description Transaction A transaction object or null when no transaction was found. | Improve this Doc View Source GetTransactionByHash(String) Returns the information about a transaction requested by transaction hash. Declaration public Transaction GetTransactionByHash(string hash) Parameters Type Name Description System.String hash Hash of a transaction. Returns Type Description Transaction A transaction object or null when no transaction was found. | Improve this Doc View Source GetTransactionReceipt(String) Returns the receipt of a transaction by transaction hash. Declaration public TransactionReceipt GetTransactionReceipt(string hash) Parameters Type Name Description System.String hash Hash of a transaction. Returns Type Description TransactionReceipt A transaction receipt object, or null when no receipt was found. | Improve this Doc View Source GetTransactionsByAddress(String, Nullable<Int64>) Returns the latest transactions successfully performed by or for an address. Note that this information might change when blocks are rewinded on the local state due to forks. Declaration public Transaction[] GetTransactionsByAddress(string address, long? numberOfTransactions = null) Parameters Type Name Description System.String address Address of which transactions should be gathered. System.Nullable < System.Int64 > numberOfTransactions Number of transactions that shall be returned. Returns Type Description Transaction [] Array of transactions linked to the requested address. | Improve this Doc View Source GetWork(String, String) Returns instructions to mine the next block. This will consider pool instructions when connected to a pool. Declaration public WorkInstructions GetWork(string address = null, string extraData = \"\") Parameters Type Name Description System.String address The address to use as a miner for this block. This overrides the address provided during startup or from the pool. System.String extraData Hex-encoded value for the extra data field. This overrides the extra data provided during startup or from the pool. Returns Type Description WorkInstructions Mining work instructions. | Improve this Doc View Source Hashrate() Returns the number of hashes per second that the node is mining with. Declaration public double Hashrate() Returns Type Description System.Double Number of hashes per second. | Improve this Doc View Source IsMining() Returns true if client is actively mining new blocks. Declaration public bool IsMining() Returns Type Description System.Boolean true if the client is mining, otherwise false . | Improve this Doc View Source Mempool() Returns information on the current mempool situation. This will provide an overview of the number of transactions sorted into buckets based on their fee per byte (in smallest unit). Declaration public MempoolInfo Mempool() Returns Type Description MempoolInfo Mempool information. | Improve this Doc View Source MempoolContent(Nullable<Boolean>) Returns transactions that are currently in the mempool. Declaration public object[] MempoolContent(bool? includeTransactions = null) Parameters Type Name Description System.Nullable < System.Boolean > includeTransactions If true includes full transactions, if false includes only transaction hashes. Returns Type Description System.Object [] Array of transactions (either represented by the transaction hash or a transaction object). | Improve this Doc View Source MinerAddress() Returns the miner address. Declaration public string MinerAddress() Returns Type Description System.String The miner address configured on the node. | Improve this Doc View Source MinerThreads() Declaration public int MinerThreads() Returns Type Description System.Int32 | Improve this Doc View Source MinFeePerByte() Returns the minimum fee per byte. Declaration public int MinFeePerByte() Returns Type Description System.Int32 The minimum fee per byte. | Improve this Doc View Source PeerCount() Returns number of peers currently connected to the client. Declaration public int PeerCount() Returns Type Description System.Int32 Number of connected peers. | Improve this Doc View Source PeerList() Returns list of peers known to the client. Declaration public Peer[] PeerList() Returns Type Description Peer [] The list of peers. | Improve this Doc View Source PeerState(String) Returns the state of the peer. Declaration public Peer PeerState(string address) Parameters Type Name Description System.String address The address of the peer. Returns Type Description Peer The current state of the peer. | Improve this Doc View Source Pool() Returns mining pool. Declaration public string Pool() Returns Type Description System.String The mining pool connection string, or null if not enabled. | Improve this Doc View Source PoolConfirmedBalance() Returns the confirmed mining pool balance. Declaration public int PoolConfirmedBalance() Returns Type Description System.Int32 The confirmed mining pool balance (in smallest unit). | Improve this Doc View Source PoolConnectionState() Returns the connection state to mining pool. Declaration public PoolConnectionState PoolConnectionState() Returns Type Description PoolConnectionState The mining pool connection state. | Improve this Doc View Source ResetConstant(String) Resets the constant to default value. Declaration public long ResetConstant(string constant) Parameters Type Name Description System.String constant Name of the constant. Returns Type Description System.Int64 The new value of the constant. | Improve this Doc View Source SendRawTransaction(String) Sends a signed message call transaction or a contract creation, if the data field contains code. Declaration public string SendRawTransaction(string transaction) Parameters Type Name Description System.String transaction The hex encoded signed transaction Returns Type Description System.String The Hex-encoded transaction hash. | Improve this Doc View Source SendTransaction(OutgoingTransaction) Creates new message call transaction or a contract creation, if the data field contains code. Declaration public string SendTransaction(OutgoingTransaction transaction) Parameters Type Name Description OutgoingTransaction transaction The hex encoded signed transaction Returns Type Description System.String The Hex-encoded transaction hash. | Improve this Doc View Source SetConstant(String, Int64) Sets the constant to the given value. To reset the constant use ResetConstant() instead. Declaration public long SetConstant(string constant, long value) Parameters Type Name Description System.String constant The class and name of the constant (format should be \"Class.CONSTANT\" ). System.Int64 value The new value of the constant. Returns Type Description System.Int64 The value of the constant. | Improve this Doc View Source SetLog(String, LogLevel) Sets the log level of the node. Declaration public bool SetLog(string tag, LogLevel level) Parameters Type Name Description System.String tag Tag: If \"*\" the log level is set globally, otherwise the log level is applied only on this tag. LogLevel level Minimum log level to display. Returns Type Description System.Boolean true if the log level was changed, false otherwise. | Improve this Doc View Source SetMinerThreads(Int64) Sets the number of CPU threads for the miner. Declaration public int SetMinerThreads(long threads) Parameters Type Name Description System.Int64 threads The new number of threads to allocate for mining. Returns Type Description System.Int32 The number of threads allocated for mining. | Improve this Doc View Source SetMinFeePerByte(Int32) Sets the minimum fee per byte. Declaration public int SetMinFeePerByte(int fee) Parameters Type Name Description System.Int32 fee The new minimum fee per byte. Returns Type Description System.Int32 The new minimum fee per byte. | Improve this Doc View Source SetMining(Boolean) Sets the current mining state to that value. Declaration public bool SetMining(bool state) Parameters Type Name Description System.Boolean state The new state to be set. Returns Type Description System.Boolean true if the client is mining, otherwise false . | Improve this Doc View Source SetPeerState(String, PeerStateCommand) Sets the state of the peer. Declaration public Peer SetPeerState(string address, PeerStateCommand command) Parameters Type Name Description System.String address The address of the peer. PeerStateCommand command The new command to send. Returns Type Description Peer The current state of the peer. | Improve this Doc View Source SetPool(Object) Sets the mining pool. Declaration public string SetPool(object address) Parameters Type Name Description System.Object address The mining pool connection string ( url:port ) or boolean to enable/disable pool mining. Returns Type Description System.String The mining pool connection string, or null if not enabled. | Improve this Doc View Source SubmitBlock(String) Submits a block to the node. When the block is valid, the node will forward it to other nodes in the network. Declaration public void SubmitBlock(string block) Parameters Type Name Description System.String block Hex-encoded full block (including header, interlink and body). When submitting work from getWork, remember to include the suffix. | Improve this Doc View Source Syncing() Returns an object with data about the sync status or false . Declaration public object Syncing() Returns Type Description System.Object An object with sync status data or false , when not syncing."
  },
  "api/Nimiq.RemoteErrorException.html": {
    "href": "api/Nimiq.RemoteErrorException.html",
    "title": "Class RemoteErrorException",
    "keywords": "Class RemoteErrorException Exception on the remote server. Inheritance System.Object RemoteErrorException Namespace : Nimiq Assembly : NimiqClient.dll Syntax public class RemoteErrorException : Exception Constructors | Improve this Doc View Source RemoteErrorException(String) Initializes remote exception from a string. Declaration public RemoteErrorException(string message) Parameters Type Name Description System.String message Meessage for the error."
  },
  "api/Nimiq.StringEnumeration.html": {
    "href": "api/Nimiq.StringEnumeration.html",
    "title": "Class StringEnumeration",
    "keywords": "Class StringEnumeration Abstract base class used in string enumerations. Inheritance System.Object StringEnumeration ConsensusState LogLevel PeerStateCommand Namespace : Nimiq Assembly : NimiqClient.dll Syntax public abstract class StringEnumeration : object Properties | Improve this Doc View Source Value Associated value. Declaration public string Value { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(Object) Test whether a StringEnumeration is equal to another object. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Another object. Returns Type Description System.Boolean true if the objects are equal. | Improve this Doc View Source GetHashCode() Get the hash code of the associated value. Declaration public override int GetHashCode() Returns Type Description System.Int32 An integer value representing the hash of the associated value. | Improve this Doc View Source ToString() Get the string associated value. Declaration public override string ToString() Returns Type Description System.String string object. Operators | Improve this Doc View Source Equality(StringEnumeration, Object) Test whether a StringEnumeration is equal to another object. Declaration public static bool operator ==(StringEnumeration a, object b) Parameters Type Name Description StringEnumeration a StringEnumeration object. System.Object b Another object. Returns Type Description System.Boolean true if the two objects are equal. | Improve this Doc View Source Implicit(StringEnumeration to String) Implicit conversion to string. Declaration public static implicit operator string (StringEnumeration obj) Parameters Type Name Description StringEnumeration obj And StringEnumeration object. Returns Type Description System.String string object. | Improve this Doc View Source Inequality(StringEnumeration, Object) Test whether a StringEnumeration is different to other object. Declaration public static bool operator !=(StringEnumeration a, object b) Parameters Type Name Description StringEnumeration a StringEnumeration object. System.Object b Another object. Returns Type Description System.Boolean true if the two objects are different."
  },
  "api/Nimiq.StringEnumerationConverter.html": {
    "href": "api/Nimiq.StringEnumerationConverter.html",
    "title": "Class StringEnumerationConverter",
    "keywords": "Class StringEnumerationConverter JsonConverter used in string enumeration serialization. Inheritance System.Object StringEnumerationConverter Namespace : Nimiq Assembly : NimiqClient.dll Syntax public class StringEnumerationConverter : JsonConverter<StringEnumeration> Methods | Improve this Doc View Source CanConvert(Type) Whether a type is a subclass of StringEnumeration . Declaration public override bool CanConvert(Type typeToConvert) Parameters Type Name Description Type typeToConvert Type to check. Returns Type Description System.Boolean True if is a subclass. | Improve this Doc View Source Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Read the string value. Declaration public override StringEnumeration Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonReader reader Reader to access the encoded JSON text. Type typeToConvert Type of the object to deserialize. JsonSerializerOptions options Options for the deserialization. Returns Type Description StringEnumeration Underlying string enumeration type. | Improve this Doc View Source Write(Utf8JsonWriter, StringEnumeration, JsonSerializerOptions) Write the string value. Declaration public override void Write(Utf8JsonWriter writer, StringEnumeration value, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonWriter writer Writer to encode the JSON text. StringEnumeration value Object to serialize. JsonSerializerOptions options Options for the serialization."
  },
  "index.html": {
    "href": "index.html",
    "title": "Nimiq C# Client",
    "keywords": "Nimiq C# Client C# implementation of the Nimiq RPC client specs. Usage To get started sending requests to a Nimiq node, we create a NimiqClient object. var config = new Config( scheme: \"http\", host: \"127.0.0.1\", port: 8648, user: \"luna\", password: \"moon\" ); var client = new NimiqClient(config); // make rpc call to get current block number var blockNumber = await client.blockNumber(); Console.WriteLine(blockNumber); Note: When no config object is passed in the initialization it will use the default values in the Nimiq node. API The complete API documentation is available here . Check out the original Nimiq RPC specs for the behind-the-scenes RPC calls. Installation Use the Package Manager from Visual Studio IDE to install the NimiqClient package as a dependency to your project. Alternatively, you can install the package from the project folder using dotnet from the command line : dotnet add package NimiqClient Build After cloning the repository, open the solution file NimiqClientProjects.sln located in the repository root folder in Visual Studio. All done, happy coding! Test You need a start a Testnet Nimiq node: nodejs index.js --protocol=dumb --type=full --network=test --rpc The tests are stored in \\NimiqClientTest and can be run from the Visual Studio IDE. Alternatively you can run all the tests from the command line from the repository root directory: dotnet test Documentation The documentation is generated automatically with DocFX . To create the documentation, run the following commands from the repository root directory. First install the DocFX package: nuget install docfx.console -version 2.51.0 Copy the file README.md to the same folder with the name index.md : (Windows) copy /y README.md index.md (Unix-like) cp -r README.md index.md Remove the old generated documentation: (Windows) rmdir /s /q docs (Unix-like) rm -fr docs Run DocFX with the configuration file docfx.json via the mono command: mono docfx.console.2.51.0/tools/docfx.exe docfx.json Note: Mono is distributed with the .Net SDK, if it isn't already installed on your system download and install the tool from here . Finally add a blank file in the \\docs folder with the name .nojekyll for the documentation hosted on GitHub Pages: (Windows) echo > docs\\.nojekyll (Unix-like) echo > docs/.nojekyll Contributions This implementation was originally contributed by rraallvv . Bug reports and pull requests are welcome! Please refer to the issue tracker for ideas. License Apache 2.0"
  }
}